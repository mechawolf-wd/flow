export function getExpressionDependencies(expression) {
    const regex = /(?<!\.\s*)\b[a-zA-Z_$][a-zA-Z0-9_$]*\b/g;

    let matches = new Set();

    let match;

    while (match = regex.exec(expression)) {
        let baseIdentifier = match[0].split('.')[0].trim();

        if (!isJavaScriptKeyword(baseIdentifier)) {
            matches.add(baseIdentifier);
        }
    }

    return Array.from(matches);
}

function isJavaScriptKeyword(identifier) {
    const keywords = new Set([
        "break", "case", "catch", "class", "const", "continue", "debugger", "default", "delete",
        "do", "else", "export", "extends", "finally", "for", "function", "if", "import", "in",
        "instanceof", "new", "return", "super", "switch", "this", "throw", "try", "typeof", "var",
        "void", "while", "with", "yield", "let", "static", "await", "async", "from", "as"
    ]);

    return keywords.has(identifier);
}