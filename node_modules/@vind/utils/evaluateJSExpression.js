/**
 * Evaluate a JS expression within a given context
 * @param {*} context an object containing the variables that the expression depends on
 * @param {*} expression a string representing the expression to evaluate
 * @returns {function} Function that eventually returns the result of the expression
 */

export const evaluateJSExpression = (context, expression) => {
    try {
        const setupKeys = Object.keys(context)

        const expressionEvaluator = new Function(...setupKeys, `return ${expression}`)

        const setupValues = Object.values(context)

        return expressionEvaluator(...setupValues)
    } catch (error) {
        console.warn(error)

        return ''
    }
}