export const evaluateJSExpression = (componentSetup, expression, expressionDependencies = []) => {
    const setupKeys = Object.keys(componentSetup)

    const evaluator = new Function(...setupKeys, `return ${expression}`)

    const setupValues = Object.values(componentSetup)

    setupValues.forEach((setupValue, index) => {
        if ((setupValue.configuration?.isReactiveVariable && expressionDependencies.includes(setupValue.variableReference))) {
            setupValues[index] = setupValues[index].value
        }
    })

    let evaluatedExpression = evaluator(...setupValues)

    return evaluatedExpression
}