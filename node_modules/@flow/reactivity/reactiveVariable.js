export const generateNewReference = () => {
    return `flow-rv-id-${String(Math.trunc(Math.random() * 100000000)).padEnd(16, '0')}-${String(Math.trunc(Math.random() * 100000000)).padEnd(16, '0')}`
}

export const reactiveVariable = (value, reference, configuration = {}) => {
    configuration.isReactiveVariable = true

    const variableReference = generateNewReference()

    $Flow.watchSignals[variableReference] ??= []

    return new Proxy({ value, reference, configuration, variableReference }, {
        get(target, p) {
            return typeof target[p] === 'function' ? target[p]() : target[p]
        },
        set(target, p, newValue) {
            const oldValue = target[p]

            target[p] = newValue

            $Flow.watchSignals[variableReference].forEach(watchSignal => watchSignal(newValue, oldValue))

            $Flow.runEffects({ reference })

            return true
        }
    })
}